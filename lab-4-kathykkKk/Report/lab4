# Отчет по лабораторной работе №4.
Лабораторная работа направлена на ознакомление с Docker.

# Задание

## Создадим Docker image

Установим на наши виртуальные машины docker и создадим сам Dockerfile с помощью команды:

```
touch Dockerfile
```
Откроем этот образ:
```
nano Dockerfile
```

## Работа с образом

Сначала укажем, на основе какого образа будет работать наш Dockerfile. Затем укажем обновление пакетного менеджера и установим необходимые программы. Команды указаны на рисунке ниже.

![image](pic1.png)

В конце закрываем файл.

## Запуск aafire, работа с терминалом и соединением

После выполнения всех необходимых изменений в Dockerfile, сохраняем его. Переходим в терминал и в папке с Dockerfile запускаем команду для сборки образа с тегом "aafire". После чего запустим докер и подключимся к нему. И в контейнере запускаем '''aafire'''.

```
docker build -t aafire .
docker run -it aafire
aafire
```
![image](https://github.com/berdichevskiia/lab-5-cs/blob/main/5_2_true.png)

Не трудно убедиться, что контейнер запустился. Проверим для двух контейнеров.

![image](https://github.com/berdichevskiia/lab-5-cs/blob/main/5_3_true.png)

Теперь создадим сеть:

```
docker network create Mynetwork
```

После этого необходимо подключить контейнеры к нашей сети. Названия контейнеров можно увидеть при просмотре списка активных контейнеров.

![image](https://github.com/berdichevskiia/lab-5-cs/blob/main/5_4_true.png)

Рассмотрим состояние нашей сети, введя следующую команду в терминал.

```
docker network inspect Mynetwork
```

![image](https://github.com/berdichevskiia/lab-5-cs/blob/main/5_5_true.png)

Мы проверим соединение, используя команду ping, после того, как контейнеры были соединены. Мы получили IP-адреса из предыдущей команды.

![image](https://github.com/berdichevskiia/lab-5-cs/blob/main/5_6_true.png)

# Вывод

Как не трудно заметить, у меня все получилось и все работает.
